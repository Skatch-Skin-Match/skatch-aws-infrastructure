name: Lambda Deployment Pipeline
on:

  workflow_call:
    inputs:
      apiName:
        required: true
        type: string
      applicationName:
        required: false
        type: string
      region:
        required: true
        type: string
      parameters:
        required: false
        type: string
      tags:
        required: false
        type: string
      srcDir:
        required: true
        type: string
      environment:
        required: false
        type: string
      deploy:
        required: false
        type: boolean
        default: true
jobs:
  ci:
    runs-on: ubuntu-latest
    environment: "Production"
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_SKATCH_CICD }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_SKATCH_CICD }}
      AWS_DEFAULT_REGION: ${{inputs.region}}
      VPC_ID: ${{ secrets.VPC_ID }}
      SUBNET_IDS: ${{ secrets.SUBNET_IDS }}
      SubnetA: ${{ secrets.SUBNET_A }}
      SubnetB: ${{ secrets.SUBNET_B }}
      SubnetC: ${{ secrets.SUBNET_C }}
      SubnetD: ${{ secrets.SUBNET_D }}
      ENV: ${{ inputs.environment }}
      APPLICATION_NAME: ${{inputs.applicationName}}
      API_NAME: ${{inputs.apiName}}
      SRC_DIR: ${{inputs.srcDir}}
      TAGS: ${{ inputs.TAGS }}
      PARAMETERS: ${{inputs.parameters}}
      DEPLOY: ${{ inputs.deploy }}
    steps:
      - name: Print all the github actions events
        uses: hmarr/debug-action@v2
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          #cache: 'npm'    
      - name: Setup SAM cli
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - uses: aws-actions/setup-sam@v2
      - name: sam Temporary fix https://github.com/aws/aws-sam-cli/issues/4527
        run: $(dirname $(readlink $(which sam)))/pip install --force-reinstall "cryptography==38.0.4"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_SKATCH_CICD  }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SKATCH_CICD  }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}    
      - name: Validate SAM Template
        run: sam validate
      - id: get_version
        uses: battila7/get-version-action@v2
      - name: Publish a new version to S3 repo
        #if: github.event.pull_request.merged == true
        uses: Skatch-Skin-Match/skatch-aws-infrastructure/lambda/sam-publish@main
        with:
          versionNo: ${{ steps.get_version.outputs.version }}
          apiName: ${{env.API_NAME}}
          applicationName: ${{env.APPLICATION_NAME}}
          environment: ${{env.ENV}}
          region: ${{env.AWS_DEFAULT_REGION}}
      - name: Deploy to Development
        #if: github.event.pull_request.merged == true
        uses: Skatch-Skin-Match/skatch-aws-infrastructure/lambda/sam-deploy@main
        with:
          versionNo: ${{steps.get_version.outputs.version}}
          apiName: ${{env.API_NAME}}
          applicationName: ${{env.APPLICATION_NAME}}
          environment: ${{env.ENV}}
          region: ${{env.AWS_DEFAULT_REGION}}
          tags: ""
          parameters: "${{env.PARAMETERS}} VpcID=${{env.VPC_ID}} SubnetA=${{ env.SubnetA }} SubnetB=${{ env.SubnetB }} SubnetC=${{ env.SubnetC }} SubnetD=${{ env.SubnetD }}"
          deploy: "${{env.DEPLOY}}"