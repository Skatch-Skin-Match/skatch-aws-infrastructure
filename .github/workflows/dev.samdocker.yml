name: Lambda Deployment Pipeline
on:
  workflow_call:
    inputs:
      apiName:
        required: true
        type: string
      applicationName:
        required: false
        type: string
      region:
        required: true
        type: string
      parameters:
        required: false
        type: string
      tags:
        required: false
        type: string
      environment:
        required: false
        type: string
      deploy:
        required: false
        type: boolean
        default: true
      dockerFile:
        required: false
        type: string
        default: "Dockerfile"
      repositoryName:
        required: true
        type: string
      path:
        required: false
        type: string
        default: "./"  
jobs:
  ci:
    runs-on: ubuntu-latest
    environment: "Production"
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_SKATCH_CICD }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_SKATCH_CICD }}
      AWS_DEFAULT_REGION: ${{inputs.region}}
      VPC_ID: ${{ secrets.VPC_ID }}
      SUBNET_IDS: ${{ secrets.SUBNET_IDS }}
      SubnetA: ${{ secrets.SUBNET_A }}
      SubnetB: ${{ secrets.SUBNET_B }}
      SubnetC: ${{ secrets.SUBNET_C }}
      SubnetD: ${{ secrets.SUBNET_D }}
      ENV: ${{ inputs.environment }}
      APPLICATION_NAME: ${{inputs.applicationName}}
      REPO_NAME: ${{inputs.repositoryName}}
      DOCKER_FILE: ${{ inputs.dockerFile }}
      API_NAME: ${{inputs.apiName}}
      TAGS: ${{ inputs.TAGS }}
      PARAMETERS: ${{inputs.parameters}}
      DEPLOY: ${{ inputs.deploy }}
      D_PATH: ${{ inputs.path }}
    steps:
      - name: Print all the github actions events
        uses: hmarr/debug-action@v2
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          #cache: 'npm'    
      - name: Setup SAM cli
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - uses: aws-actions/setup-sam@v2
      - name: sam Temporary fix https://github.com/aws/aws-sam-cli/issues/4527
        run: $(dirname $(readlink $(which sam)))/pip install --force-reinstall "cryptography==38.0.4"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID  }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY  }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}    
      - name: Validate SAM Template
        run: sam validate
      - uses: kciter/aws-ecr-action@v3
        if: ${{ inputs.DEPLOY }}
        id: repoImage
        with:
          access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY  }}
          account_id: ${{ secrets.AWS_ACCOUNT_NUMBER_SKATCH }}
          repo: ${{ env.REPO_NAME }}
          region: ${{ env.AWS_DEFAULT_REGION}}
          tags: latest,${{ github.sha }}
          create_repo: true
          image_scanning_configuration: true
          set_repo_policy: true
          repo_policy_file: repo-policy.json
          dockerFile: ${{ env.DOCKER_FILE }}
          path: ${{ env.D_PATH }}
          extra_build_args: ${{ env.BUILD_ARGS }}
          INPUT_PATH: ${{ env.D_PATH }}
      - id: get_version
        uses: battila7/get-version-action@v2
      - name: Deploy to Development
        if: ${{ inputs.deploy }}
        run: |
          echo "Deploying image: " + ${{ steps.repoImage.outputs.image }}
          sam deploy --stack-name ${{ inputs.applicationName }}-${{inputs.apiName}}-${{steps.env-string.outputs.capitalized}} \
            --region ${{env.AWS_DEFAULT_REGION}} \
            --no-disable-rollback \
            --no-confirm-changeset \
            --resolve-s3 \
            --no-fail-on-empty-changeset \
            --parameter-overrides 'ProjectName=${{inputs.applicationName}} ImageUri=${{ steps.repoImage.outputs.image }} ${{inputs.parameters}}' \
            --tags CreatedBy=Skatch-SAM ${{ inputs.tags }} \
            --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND CAPABILITY_NAMED_IAM