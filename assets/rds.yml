AWSTemplateFormatVersion: '2010-09-09'

Description: >
  Template description
  Last Modified: 
  Author: Amit Heda
Parameters:
  VpcId:
    Description: VPC ID to create the stack
    Type: String
  DBAllocatedStorage:
    Description: 'The allocated storage size, specified in GB'
    Type: Number
    Default: 5
    MinValue: 5
    MaxValue: 16384
  DBBackupRetentionPeriod:
    Description: 'The number of days to keep snapshots of the database.'
    Type: Number
    MinValue: 0
    MaxValue: 35
    Default: 7
  DBInstanceClass:
    Description: 'The instance type of database server.'
    Type: String
    Default: 'db.t3.micro' 
  DBName:
    Description: 'Name of the database'
    Type: String
    Default: ''
  SubnetIds:
    Description: SubnetIDs to create the subnet group
    Type: String  
  DBEngine:
    Description: Database Engine
    Type: String
    Default: postgres
  DBEngineVersion:
    Description: 'PostgreSQL version.'
    Type: String
    Default: '14.4'
    AllowedValues: ['14.4', '14.3', '14.2', '14.1', '13.7', '13.6', '13.5', '13.4', '13.3', '12.11', '12.10', '12.9', '12.8', '12.7', '11.16', '11.15', '11.14', '11.13', '11.12', '10.21', '10.20', '10.19', '10.18', '10.17'] # aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"
  DBMasterUsername:
    Description: 'The master user name for the DB instance (ignored when DBSnapshotIdentifier is set, value used from snapshot).'
    Type: String
    Default: master    
  DBMultiAZ:
    Description: 'Specifies if the database instance is deployed to multiple Availability Zones for HA'
    Type: String
    Default: false
    AllowedValues: [true, false]
  PreferredBackupWindow:
    Description: 'The daily time range in UTC during which you want to create automated backups.'
    Type: String
    Default: '09:54-10:24'
  PreferredMaintenanceWindow:
    Description: The weekly time range (in UTC) during which system maintenance can occur.
    Type: String
    Default: 'sat:07:00-sat:07:30'
  isEncrypted:
    Description: 'Specifies if the database instance is encrypted or not'
    Type: String
    Default: true
    AllowedValues: [true, false]
  EnvironmentName:
    Description: Environment Name
    Type: String
  ProjectName:
    Description: Project Name
    Type: String
  DBPort:
    Description: TCP/IP Port for the Database Instance
    Type: Number
    Default: 5432
  VpcCidr:
    Description: Vpc CIDR Block for db security outbound rule
    Type: String
    Default: '0.0.0.0/0'
  isPubliclyAccessible:
    Description: RDS instance can access over the internet
    Type: String
    Default: true
    AllowedValues: [true, false]
  isDeletionProtection:
    Description: Delete protection
    Type: String
    Default: true
    AllowedValues: [true, false]
  SubnetA:
    Description: SubnetID to create the stack
    Type: String
  SubnetB:
    Description: SubnetID to create the stack
    Type: String
  SubnetC:
    Description: SubnetID to create the stack
    Type: String 
  SubnetD:
    Description: SubnetID to create the stack
    Type: String    



Resources:
  DBSecretsManager:
    Type: AWS::SecretsManager::Secret
    Properties:
        Name: !Sub "${EnvironmentName}/${ProjectName}/dbSecret"
        Description: 'Secret with dynamically generated password.'
        GenerateSecretString:
            RequireEachIncludedType: True
            SecretStringTemplate:
                !Sub
                  - '{"username": "${DBMasterUsername}"}'
                  - DBMasterUsername: !Ref DBMasterUsername
            GenerateStringKey: 'password'
            PasswordLength: 25
            ExcludePunctuation: True

  DBSecretsManagerAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "${EnvironmentName}-${ProjectName}-dbSecretsManagerPolicy"
      Path: /
      PolicyDocument:
         Version: '2012-10-17'
         Statement:
           - Effect: Allow
             Action:
               - secretsmanager:GetResourcePolicy
               - secretsmanager:GetSecretValue
               - secretsmanager:DescribeSecret
               - secretsmanager:ListSecretVersionIds
               - secretsmanager:ListSecrets
             Resource: !Ref DBSecretsManager          

  DatabaseSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security Group for the RDS
      GroupName: !Sub SG-${ProjectName}-RDS-${EnvironmentName}
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref DBPort
          ToPort: !Ref DBPort
          CidrIp: !Ref VpcCidr  
          Description: "Allows access to vpc cidr ip range"    
      SecurityGroupEgress:
        - IpProtocol: "-1"
          FromPort: -1
          ToPort: -1
          CidrIp: !Ref VpcCidr
          Description: "Allows access to vpc cidr ip range"
      Tags:
        - Key: Name
          Value: !Sub SG-${ProjectName}-RDS-${EnvironmentName}  

  DBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: 'Subnet group for rds'
      SubnetIds: 
          - !Ref SubnetA
          - !Ref SubnetB
          - !Ref SubnetC
          - !Ref SubnetD

  DBInstance:
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceIdentifier: !Sub ${ProjectName}-${EnvironmentName} 
      AllocatedStorage: !Ref DBAllocatedStorage
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: !Ref DBBackupRetentionPeriod
      CopyTagsToSnapshot: true
      DBInstanceClass: !Ref DBInstanceClass
      DBName: !Ref DBName
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: !Ref DBEngine
      EngineVersion: !Ref DBEngineVersion
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref DBSecretsManager, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref DBSecretsManager, ':SecretString:password}}']]
      MultiAZ: !Ref DBMultiAZ
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      StorageType: gp2
      StorageEncrypted: !Ref isEncrypted
      VPCSecurityGroups:
      - !Ref DatabaseSecurityGroup
      PubliclyAccessible: !Ref isPubliclyAccessible
      DeletionProtection: !Ref isDeletionProtection


  SecretRDSInstanceAttachment:
    Type: 'AWS::SecretsManager::SecretTargetAttachment'
    Properties:
      TargetId: !Ref DBInstance
      SecretId: !Ref DBSecretsManager
      TargetType: 'AWS::RDS::DBInstance' 

Outputs:
  DBSecretsManagerAccessPolicy:
    Description: Managed Policy for Accessing DBSecretsManager
    Value: !Ref DBSecretsManagerAccessPolicy
    
  DBSecretsManagerName:
    Description: DB SecretsManager Name
    Value: !Select [ 0,!Split [-, !Select [6, !Split [":", !Ref DBSecretsManager]]],]

  DBSecretsManagerArn:
    Description: DB SecretsManager Arn
    Value: !Ref DBSecretsManager